@page "/"
@inject IJSRuntime JSRuntime

<div class="card" style="width: 18rem;">
    <ul class="list-group">
        <li class="list-group-item">Language: @Data?.Language</li>
        <li class="list-group-item">Type: @Data?.Context.Type</li>
        <li class="list-group-item">ViewType: @Data?.Context.ViewType</li>
        <li class="list-group-item">UserId: @Data?.Context.UserId</li>
        @if (@Data?.Context.Type == ContextType.Utou)
        {
            <li class="list-group-item">UtouId: @Data?.Context.UtouId</li>
        }
        else if (@Data?.Context.Type == ContextType.Room)
        {
            <li class="list-group-item">RoomId: @Data?.Context.RoomId</li>
        }
        else if (@Data?.Context.Type == ContextType.Group)
        {
            <li class="list-group-item">GroupId: @Data?.Context.GroupId</li>
        }
    </ul>
</div>
<p>@Error</p>

@functions{
    LiffData Data;
    string Error;

    protected override Task OnInitAsync()
    {
        return LiffInit();
    }

    protected async Task LiffInit()
    {
        await JSRuntime.InvokeAsync<object>("liffExt.init", new DotNetObjectRef(this));
    }


    [JSInvokable]
    public void LiffInitSuccess(string data)
    {
        try
        {
            var liffData = JsonConvert.DeserializeObject<LiffData>(data, new CamelCaseJsonSerializerSettings());
            Data = liffData;
        }
        catch (Exception e)
        {
            Error = e.ToString();
        }
    }

    [JSInvokable]
    public void LiffInitError(string error)
    {
        Error = $"Error {error}";
    }
}